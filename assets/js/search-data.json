{
  
    
        "post0": {
            "title": "Statistical Theory",
            "content": "Statistical Learning Theory . 11 October 2019 . DATA 1010 . The goal of statistical learning is to draw conclusions about an unknown probability measure given independent observations drawn from the measure. These observations are called training data. In supervised learning, the unknown measure $ mathbb{P}$ is on a product space $ mathcal{X} times mathcal{Y}$. In other words, each training observation has the form $( mathbf{X}, Y)$ where $ mathbf{X}$ is an element of $ mathcal{X}$ and $ mathbf{Y}$ is an element of $ mathcal{Y}$. . We aim to use the training data to predict $Y$ given $ mathbf{X}$, where $( mathbf{X},Y)$ denotes a random variable in $ mathcal{X} times mathcal{Y}$ with distribution $ mathbb{P}$. . Problem 1 . Suppose that $ mathbf{X} = [X_1, X_2]$, where $X_1$ is the color of a banana, $X_2$ is the weight of the banana, and $Y$ is a measure of banana deliciousness. Values of $X_1, X_2,$ and $Y$ are recorded for many bananas, and they are used to predict $Y$ for other bananas whose $ mathbf{X}$ values are known. . Do you expect the prediction function to be more sensitive to changes in $X_1$ or changes in $X_2$? . Solution. . A supervised learning problem is a regression problem if $Y$ is quantitative ($ mathcal{Y} subset mathbb{R}$) and a classification problem if $ mathcal{Y}$ is a set of labels. . . We call the components of $ mathbf{X}$ features, predictors, or input variables, and we call $Y$ the response variable or output variable. To predict $Y$ values from $ mathbf{X}$ values, we define a function $h$ from $ mathcal{X}$ to $ mathcal{Y}$, which is called a prediction function. . Problem 2 . Explain how a machine learning task like image recognition fits into this framework. In other words, describe an appropriate feature space $ mathcal{X}$, and describe in intuitive terms what the prediction function needs to accomplish. . Solution. . Problem 3 . List an example of a real-world regression problem and a real-world classification problem. . Solution. . To make meaningful and unambiguous statements about a proposed prediction function $h: mathcal{X} to mathcal{Y}$, we need a rubric by which to assess it. This is customarily done by defining a loss (or risk, or error) $L(h)$, with the idea that smaller loss is better. We might wish to define $L$ only for $h$&#39;s in a specified class $ mathcal{H}$ of candidate functions. Since $L : mathcal{H} to mathbb{R}$ is defined on a set of functions, we call $L$ the loss functional. . Given a statistical learning problem, a space $ mathcal{H}$ of candidate prediction functions, and a loss functional $L: mathcal{H} to mathbb{R}$, we define the target function to be $ operatorname{argmin}_{h in mathcal{H}}L(h)$. . Let&#39;s look at some common loss functionals. For regression, we often use the mean squared error: . $$ L(h) = mathbb{E}[(h(X)-Y)^2] $$ Problem 4 . Recall the exam scores example from the KDE section of the statistics course (plot reproduced below), in which we know the exact density of the distribution which generates the hours-score pairs for students taking an exam. . (a) What must be true of the class $ mathcal{H}$ of candidate functions in order for the target function to be equal to the regression function $r$? . (b) Suppose we collect six observations, as shown below. Can the loss value of the prediction function plotted be decreased by lowering its graph a bit? . using LinearAlgebra, Statistics, Roots, Optim, Plots, Random Random.seed!(1234) # the true regression function r(x) = 2 + 1/50*x*(30-x) # the true density function σy = 3/2 f(x,y) = 3/4000 * 1/√(2π*σy^2) * x*(20-x)*exp(-1/(2σy^2)*(y-r(x))^2) heatmap(0:0.02:20, -2:0.01:12, f, fillcolor = cgrad([:white, :MidnightBlue]), ratio = 1, fontfamily = &quot;Palatino&quot;, size = (600,300), xlims = (0,20), ylims = (0,12), xlabel = &quot;hours studied&quot;, ylabel = &quot;score&quot;) scatter!([(5,2), (5,4), (7,4), (15,4.5), (18, 4), (10,6.1)], markersize = 3, label = &quot;observations&quot;) plot!(0:0.02:20, r, label = &quot;target function&quot;, legend = :topleft, linewidth = 2) . 0 5 10 15 20 0 2 4 6 8 10 12 hours studied score 0 0.0025 0.0050 0.0075 0.0100 0.0125 0.0150 0.0175 observations target function Solution. . Problem 5 . Think of another loss functional for a regression problem. . Solution. . For classification, we often consider the misclassification probability . $$ L(h) = mathbb{E} left[ boldsymbol{1}_{ {h( mathbf{X}) neq Y }} right] = mathbb{P}(h( mathbf{X}) neq Y). $$ Problem 6 . Find the target function for the misclassification loss in the case where $ mathcal{X} = mathbb{R}$, $ mathcal{Y} = {0,1 }$ and the probability mass on $ mathcal{X} times mathcal{Y}$ is spread out according to the one-dimensional density function $$ f(x,y) = begin{cases} frac{1}{3} mathbf{1}_{ {x in [0,2] }} &amp; text{if }y = 0 frac{1}{6} mathbf{1}_{ {x in [1,3] }} &amp; text{if }y = 1 end{cases} $$ . plot([(0,0),(2,0)], linewidth = 4, color = :MidnightBlue, label = &quot;probability mass&quot;, xlims = (-2,5), ylims = (-1,2)) plot!([(1,1),(3,1)], linewidth = 2, color = :MidnightBlue, primary = false) . -2 -1 0 1 2 3 4 5 -1 0 1 2 probability mass If $ mathcal{H}$ contains $G( mathbf{x}) = operatorname{argmax}_c mathbb{P}(Y=c | mathbf{X} = mathbf{x})$, then $G$ is the target function for this loss functional. . Note that neither of these loss functionals can be computed directly unless the probability measure $ mathbb{P}$ on $ mathcal{X} times mathcal{Y}$ is known. Since the goal of statistical learning is to make inferences about $ mathbb{P}$ when it is not known, we must approximate $L$ (and likewise also the target function $h$) using the training data. . The most straightforward way to do this is to replace $ mathbb{P}$ with the empirical probability measure associated with the training data $ {( mathbf{X}_i, Y_i) }_{i=1}^n$. This is the probability measure which places $ frac{1}{n}$ units of probability mass at $( mathbf{X}_i, Y_i)$, for each $i$ from $1$ to $n$. The empirical risk of a candidate function $h in mathcal{H}$ is the risk functional evaluated with respect to the empirical measure of the training data. . A learner is a function which takes a set of training data as input and returns a prediction function $ widehat{h}$ as output. A common way to specify a learner is to let $ widehat{h}$ be the empirical risk minimizer (ERM), which is the function in $ mathcal{H}$ which minimizes the empirical risk. . Problem 7 . Suppose that $ mathcal{X} = [0,1]$ and $ mathcal{Y} = mathbb{R}$, and that the probability measure on $ mathcal{X} times mathcal{Y}$ is the one which corresponds to sampling $X$ uniformly from $[0,1]$ and then sampling $Y$ from $ mathcal{N}(X/2 + 1, 1)$. . Let $ mathcal{H}$ be the set of monic polynomials of degree six or less. Given training observations $ {( mathbf{X}_i, Y_i) }_{i=1}^6$, find the risk minimizer and the empirical risk minimizer for the mean squared error. . using Pkg Pkg.add(&quot;Polynomials&quot;) . Updating registry at `C: Users dell .julia registries General` Updating git-repo `https://github.com/JuliaRegistries/General.git` . . Resolving package versions... Installed Libiconv_jll ─ v1.16.0+7 Installed XML2_jll ───── v2.9.10+3 Installed ZeroMQ_jll ─── v4.3.2+5 Installed ExprTools ──── v0.1.3 Installed Intervals ──── v1.5.0 Installed Polynomials ── v1.1.10 Installed TimeZones ──── v1.4.0 Updating `C: Users dell .julia environments v1.5 Project.toml` [f27b6e38] + Polynomials v1.1.10 Updating `C: Users dell .julia environments v1.5 Manifest.toml` [e2ba6199] + ExprTools v0.1.3 [8f5d6c58] + EzXML v1.1.0 [d8418881] + Intervals v1.5.0 [94ce4f54] + Libiconv_jll v1.16.0+7 [78c3b35d] + Mocking v0.7.1 [f27b6e38] + Polynomials v1.1.10 [f269a46b] + TimeZones v1.4.0 [02c8fc9c] + XML2_jll v2.9.10+3 [8f1865be] ↑ ZeroMQ_jll v4.3.2+4 ⇒ v4.3.2+5 Building TimeZones → `C: Users dell .julia packages TimeZones tx0tt deps build.log` . using Plots, Distributions, Polynomials, Random Random.seed!(123) X = rand(6) Y = X/2 .+ 1 .+ randn(6) p = Polynomials.fit(X,Y) heatmap(0:0.01:1, -4:0.01:4, (x,y) -&gt; pdf(Normal(x/2+1),y), opacity = 0.8, fontfamily = &quot;Palatino&quot;, color = cgrad([:white, :MidnightBlue]), xlabel = &quot;x&quot;, ylabel = &quot;y&quot;) plot!(0:0.01:1, x-&gt;p(x), label = &quot;empirical risk minimizer&quot;, color = :purple) #plot!(0:0.01:1, ACTUAL-REGRESSION-FUNCTION, label = &quot;risk minimizer&quot;) scatter!(X, Y, label = &quot;training points&quot;, ylims = (-1,4), color = :red) . 0.00 0.25 0.50 0.75 1.00 x −1 0 1 2 3 4 y 0.05 0.10 0.15 0.20 0.25 0.30 0.35 empirical risk minimizer training points This example illustrates a phenomenon called overfitting. Although the empirical risk is small for the prediction function $h$ we found, smallness of the empirical risk does not imply smallness of the true risk. The difference between empirical risk and the actual value of the risk functional is called generalization error (or test error). . We mitigate overfitting by building inductive bias into the model. Common approaches include . using a restrictive class $ mathcal{H}$ of candidate functions, | regularizing: adding a term to the loss functional which penalizes model complexity, and | cross-validating: proposing a spectrum of candidate functions and selecting the one which performs best on withheld training observations. | . Problem 8 . Which method of introducing inductive bias does linear regression use? | Which method did we use for kernel density estimation in the statistics course? | . Solution. . Inductive bias can lead to underfitting: relevant relations are missed, so both training and actual error are larger than necessary. The tension between underfitting and overfitting is the bias-complexity (or bias-variance) tradeoff. . Theorem (no free lunch) Suppose $ mathcal{X}$ and $ mathcal{Y}$ are finite sets, and let $f$ denote a probability distribution on $ mathcal{X} times mathcal{Y}$. Let $D$ be a collection of $n$ independent observations from $f$, and let $h_1$ and $h_2$ be prediction functions (which associate a prediction $h_j(d, mathbf{x}) in mathcal{Y}$ to each pair $(d, mathbf{x})$ where $d$ is a set of training observations and $ mathbf{x} in mathcal{X}$). Consider the cost random variable $C_j = (h_j(D,X) - Y)^2$ (or $C_j = boldsymbol{1}_{ {h_j(D,X) = Y }}$) for $j in {1,2 }$. . The average over all distributions $f$ of the distribution of $C_1$ is equal to the average over all distributions $f$ of the distribution of $C_2$. . Problem 9 . The no-free-lunch theorem implies that cross-validation is exactly as effective on average as anti-cross-validation (select the worst-performing model on withheld data). What does that imply about the relationship between real-world probability distributions and the space of all probability distributions? .",
            "url": "https://polarbearxbk.github.io/fastpages/jupyter/2020/03/01/test.html",
            "relUrl": "/jupyter/2020/03/01/test.html",
            "date": " • Mar 1, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master- badges: true- comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://polarbearxbk.github.io/fastpages/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://polarbearxbk.github.io/fastpages/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://polarbearxbk.github.io/fastpages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://polarbearxbk.github.io/fastpages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}